blueprint:
  name: Smart AC Control
  description: Auto AC control using external sensor. Created by Fahad.
  domain: automation
  input:
    climate_device:
      name: AC
      selector:
        entity:
          domain: climate
    temperature_sensor:
      name: Temperature
      selector:
        entity:
          domain: sensor
          device_class: temperature
    target_temperature:
      name: Target
      default: 24
      selector:
        number:
          min: 16
          max: 30
          unit_of_measurement: "°C"
          mode: slider
    margin:
      name: Margin
      default: 1
      selector:
        number:
          min: 0.1
          max: 5
          step: 0.1
          unit_of_measurement: "°C"
    cooldown_time:
      name: Cooldown
      default: 180
      selector:
        number:
          min: 30
          max: 3600
          step: 10
          unit_of_measurement: "s"

mode: single
trigger:
  - platform: state
    entity_id: !input temperature_sensor

variables:
  current_temp: "{{ states(temperature_sensor) | float }}"
  target_temp: !input target_temperature
  margin: !input margin
  cooldown: !input cooldown_time
  ac: !input climate_device
  last_changed: >
    {{ (as_timestamp(now()) - as_timestamp(state_attr(this.entity_id, 'last_triggered') or 0)) | int }}

condition:
  - condition: template
    value_template: "{{ last_changed > cooldown }}"

action:
  - choose:
      - conditions:
          - condition: template
            value_template: "{{ current_temp > (target_temp + margin) }}"
        sequence:
          - service: climate.set_hvac_mode
            data:
              entity_id: "{{ ac }}"
              hvac_mode: cool
      - conditions:
          - condition: template
            value_template: "{{ current_temp < (target_temp - margin) }}"
        sequence:
          - service: climate.set_hvac_mode
            data:
              entity_id: "{{ ac }}"
              hvac_mode: 'off'
