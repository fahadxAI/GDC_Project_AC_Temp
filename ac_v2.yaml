blueprint:
  name: fahadx - Smart Project Temp AC - ZigbeeMQTT - Aqa*
  description: >
    Advanced temperature control for multi-zone AC with time-based logic. Developed by Fahadx.
  domain: automation
  input:
    target_temp:
      name: Target temperature
      default: 22
      selector:
        number:
          min: 16
          max: 30
          step: 0.5
          unit_of_measurement: "°C"

    eco_temp:
      name: Eco temperature
      default: 26
      selector:
        number:
          min: 20
          max: 30
          step: 0.5
          unit_of_measurement: "°C"

    delay_minutes:
      name: Action delay (minutes)
      default: 3
      selector:
        number:
          min: 1
          max: 10
          unit_of_measurement: "minutes"

    temperature_sensors:
      name: Temperature sensors (one per zone)
      selector:
        entity:
          domain: sensor
          device_class: temperature
          multiple: true

    climate_entities:
      name: AC units (same order as sensors)
      selector:
        entity:
          domain: climate
          multiple: true

    smart_mode_start:
      name: Smart mode start time
      selector:
        time:

    smart_mode_end:
      name: Smart mode end time
      selector:
        time:

    off_hours_temp:
      name: Temperature during off-hours (normal mode)
      default: 24
      selector:
        number:
          min: 18
          max: 30
          step: 0.5
          unit_of_measurement: "°C"

mode: single

trigger:
  - platform: time_pattern
    minutes: "*/5"

condition: []

action:
  - variables:
      target: !input target_temp
      eco: !input eco_temp
      off_hours: !input off_hours_temp
      sensors: !input temperature_sensors
      climates: !input climate_entities
      now: "{{ now().strftime('%H:%M') }}"
      smart_start: !input smart_mode_start
      smart_end: !input smart_mode_end
      smart_mode: >
        {{ smart_start <= now < smart_end if smart_start < smart_end else (now >= smart_start or now < smart_end) }}

  - repeat:
      count: "{{ [sensors | count, climates | count] | min }}"
      sequence:
        - variables:
            sensor: "{{ sensors[repeat.index - 1] }}"
            climate: "{{ climates[repeat.index - 1] }}"
            temp_now: "{{ states(sensor) | float(0) }}"
            current_set: "{{ state_attr(climate, 'temperature') | float(0) }}"
            diff: "{{ temp_now - target }}"

        - choose:
            - conditions:
                - condition: template
                  value_template: "{{ not smart_mode }}"
              sequence:
                - service: climate.set_temperature
                  data:
                    entity_id: "{{ climate }}"
                    temperature: "{{ off_hours }}"

            - conditions:
                - condition: template
                  value_template: "{{ smart_mode and diff > 3 }}"
              sequence:
                - service: climate.set_temperature
                  data:
                    entity_id: "{{ climate }}"
                    temperature: "{{ target - 3 }}"

            - conditions:
                - condition: template
                  value_template: "{{ smart_mode and diff > 1.5 }}"
              sequence:
                - service: climate.set_temperature
                  data:
                    entity_id: "{{ climate }}"
                    temperature: "{{ target - 2 }}"

            - conditions:
                - condition: template
                  value_template: "{{ smart_mode and diff > 0.3 }}"
              sequence:
                - service: climate.set_temperature
                  data:
                    entity_id: "{{ climate }}"
                    temperature: "{{ target }}"

            - conditions:
                - condition: template
                  value_template: "{{ smart_mode and diff < -0.5 }}"
              sequence:
                - service: climate.set_temperature
                  data:
                    entity_id: "{{ climate }}"
                    temperature: "{{ eco }}"

            - conditions:
                - condition: template
                  value_template: >
                    {{ smart_mode and (-0.3 < diff < 0.3) and current_set < target }}
              sequence:
                - service: climate.set_temperature
                  data:
                    entity_id: "{{ climate }}"
                    temperature: "{{ target }}"

        - service: system_log.write
          data:
            level: info
            message: >
              [AC] Mode: {{ 'Smart' if smart_mode else 'Normal' }} | Sensor: {{ sensor }} | Climate: {{ climate }} | Temp: {{ temp_now }} | Δ: {{ diff }} | Set: {{ current_set }}"
